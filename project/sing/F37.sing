// extending F2 with A
ring r = (2, A), x, lp;

// adding in the minpoly 
minpoly = A^37 + A + 1;

//calculate degree from the minpoly
int k = deg(x^37 + x + 1);
printf("degree k = %s", k);

poly g, curr;
poly prim = x^37 + x + 1;
// Running the loop from 0 to 2^k - 1
for (int i = 1; i < (2^k); i++)
{
    curr = x^i + 1;
    g = gcd(prim, curr); // Compute the GCD
    printf("Printing gcd(%s, x%s + 1): %s",prim, i, g);
    if (g != 1)
    {
	printf("First iteration reached: x^%s + 1",i);
	if (i < 2^k - 1)
	{
		"Not primitive";
	}else
	{
		"Is Primitive Poly.";
		//poly val = curr div prim;
		//val;
		//val*prim;
	}
	//break;
    }
}

quit;

