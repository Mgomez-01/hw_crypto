#+TITLE: Homework Assignment # 3
#+AUTHOR: Miguel Gomez U1318856
#+DATE: 2024-03-20 13:29:03
#+LATEX_CLASS: exam
#+LATEX_HEADER: \usepackage{titling}
#+LATEX_HEADER: \usepackage{url}
#+LATEX_HEADER: \usepackage{amsmath,amsthm,amssymb}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage{graphics}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage[dvipsnames]{xcolor}
#+LATEX_HEADER: \usepackage{tabularx}
#+LATEX_HEADER: \usepackage{ragged2e}
#+LATEX_HEADER: \usepackage{courier}
#+LATEX_HEADER: \usepackage{textcomp}
#+LATEX_HEADER: \usepackage{circuitikz}
#+LATEX_HEADER: \usepackage{tikz}
#+LATEX_HEADER: \usepackage{enumitem}
#+LATEX_HEADER: \usepackage{karnaugh-map}
#+LATEX_HEADER: \usepackage{bytefield}
#+LATEX_HEADER: \usepackage{mathrsfs}
#+LATEX_HEADER: \usepackage{cancel}
#+LATEX_HEADER: \usepackage[linesnumbered,ruled,vlined]{algorithm2e}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{environ}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage{algorithm}
#+LATEX_HEADER: \usepackage{algpseudocode}
#+LATEX_HEADER: \lstset{breaklines=true, basicstyle=\ttfamily\tiny, frame=single, escapeinside={(*@}{@*)}}
#+LATEX_HEADER: \usepackage[margin=0.75in]{geometry}

* HW3 - Problem 1
 design an elliptic curve crypto-cipher over a Galois field of the type $\mathbb{F}_{2^k}$.  Implement the key generation, encryption and decryption modules in Singular, and demonstrate the correct simulation.
** a)
Consider the finite field $\mathbb{F}_{2^k} \equiv \mathbb{F}_{2}[x]$ (mod $P(x)$) where $P(x) = x^3 + x^2 + 1$. Let $\alpha$ be a root of $P(x)$, i.e. $P(\alpha) = 0$. Note that $P(x)$ is indeed a primitive polynomial. Using Singular, enumerate the field elements $F_8 = {0, \alpha^7 = 1, \alpha, \alpha^2, \alpha^3 = \alpha^2 + 1, \alpha^4 =?, . . . , \alpha^6 =?}$. In other words, what are $\alpha^4 , \alpha^5 , \alpha^6$ when reduced (mod $P(\alpha)$)?

#+begin_src bash :results scalar
  start=$(date +%s.%N)
  Singular ./sing/ecc-f8-example.sing | grep -v -e "\*\* loaded\|\*\* library"
  end=$(date +%s.%N)
  echo "Execution Time: $(echo "$end - $start" | bc) seconds"
#+end_src

#+RESULTS:
#+begin_example
                     SINGULAR                                 /  Development
 A Computer Algebra System for Polynomial Computations       /   version 4.3.2
                                                           0<
 by: W. Decker, G.-M. Greuel, G. Pfister, H. Schoenemann     \   Feb 2023
FB Mathematik der Universitaet, D-67653 Kaiserslautern        \
// ** executing /home/speedy/repos/singular/git/Singular/Singular/Singular/.libs/../LIB/.singularrc
================================
when x = 0
poly f is:
y2+1
poly f factorizes as follows:
[1]:
   _[1]=1
   _[2]=y+1
[2]:
   1,2
================================
when x = A^0, :: 1
poly f after substitution of x = 1:
y2+y+(A2)
poly f factorizes as:
Calling PplusP
received R:
R = (0, (A2+A+1))
Auf Wiedersehen.
#+end_example


* HW3 - Problem 2

#+begin_src bash :results scalar
  start=$(date +%s.%N)
  Singular ./sing/ecc-projective.sing | grep -v -e "\*\* loaded\|\*\* library"
  end=$(date +%s.%N)
  echo "Execution Time: $(echo "$end - $start" | bc) seconds"
#+end_src

#+RESULTS:
#+begin_example
                     SINGULAR                                 /  Development
 A Computer Algebra System for Polynomial Computations       /   version 4.3.2
                                                           0<
 by: W. Decker, G.-M. Greuel, G. Pfister, H. Schoenemann     \   Feb 2023
FB Mathematik der Universitaet, D-67653 Kaiserslautern        \
// ** executing /home/speedy/repos/singular/git/Singular/Singular/Singular/.libs/../LIB/.singularrc
_[1]=A+1
_[2]=B+(al+1)
_[3]=C+(al)
_[4]=D+(al^2)
_[5]=Z3+1
_[6]=Y3+1
_[7]=X3+(al^2)
In the above computation, Check if X3/Z3 = alpha^2, Y3/Z3=1
========================
_[1]=A+(al^2+1)
_[2]=B+(al+1)
_[3]=C+(al^2+al)
_[4]=D+(al^2+1)
_[5]=Z3+(al^2+al)
_[6]=Y3+(al^2+1)
_[7]=X3+(al^2+al+1)
In the above computation, Check if X3/Z3 = alpha, Y3/Z3=alpha^2
========================
_[1]=A
_[2]=B+(al)
_[3]=C+(al)
_[4]=D+(al^2)
_[5]=Z3
_[6]=Y3+(al+1)
_[7]=X3
In the above computation, Check if R = (1:m:0) or (0:1:0)
========================
Auf Wiedersehen.
Execution Time: .035818046 seconds
#+end_example
