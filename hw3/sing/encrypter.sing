LIB "/home/speedy/repos/coursework/hw_crypto/lib/ecclib.lib";

// Declare the ring over GF(8), with 2 variables, x and y
ring r = (2, A), (y, x), lp;
// This is the primitive polynomial given to us as a specification
// Here X = \alpha
minpoly = A^3 + A^2 + 1;

// This is the non-singular elliptic curve also given to us as the spec Weirstrauss form E(A^2, 1)
poly E = y^2 + x*y + x^3 + A^2*x^2 + 1;

// number = element in the field
int D, R;
number x1, y1;
list C1, C2;
list e1, e2;
R = 1;
D = 2;
string P = "SOMETEXT";
string ecrypted = "";
x1 = A^3;
y1 = A^5;
e1 = x1, y1;
list points = genPoints(e1);
printf("Normal  generator P = (%s, %s)", e1[1], e1[2]);

for (int i = 1; i <= size(P); i = i + 1){
    printf("P[%s] = %s, char:%s", i, P[i], CharToNum(P[i]));
    encryptChar(CharToNum(P[i]),R);
}


quit;