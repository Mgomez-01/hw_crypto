
LIB "/home/speedy/repos/coursework/hw_crypto/lib/ecclib.lib";


// Declare the ring over GF(8), with 2 variables, x and y

ring r = (2, A), (y, x), lp;
// This is the primitive polynomial given to us as a specification
// Here X = \alpha
minpoly = A^3 + A^2 + 1;

// This is the non-singular elliptic curve also given to us as the spec Weirstrauss form E(A^2, 1)
poly E = y^2 + x*y + x^3 + A^2*x^2 + 1;


// number = element in the field
number x1, y1;
list P;

x1 = A^3;
y1 = A^5;
P = x1, y1;

list R, Q;
printf("P = (%s, %s)", P[1], P[2]);
"Calling doubleP on P";
R = doubleP(P);
"received/ 2P:";
printf("2P = (%s, %s)", R[1], R[2]);
int j;
Q = R;

for(j = 1; j<15; j = j+1){

R = PaddQ(P, Q);

printf("%sP = (%s, %s)", (j + 2), R[1], R[2]);
Q = R;
}
quit;