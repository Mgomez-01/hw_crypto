LIB "linalg.lib";
LIB "matrix.lib";

// This is also a comment

// This is how to declare a ring of polynomials in x, y, z variables
// with coefiicients in integer (mod n = 16), i.e. in Z_{16}
ring r = (integer, 26), (x, y, z), lp;

//  3 X 3 Matrix A
matrix A [2][2] = 18, 1, 19, 1;

// 3 X 1 Matrix B

matrix B [2][1] =  4, 19;

"print matrix A";
print(A);

"print matrix B";
print(B);

// We have to solve Ax = B (mod n)

poly f = 0;


"Determinant of A:";
f = det(A);

"printing det(A)";
f;

int det_A = int(det(A));
if (gcd(det_A, 26) == 1){
   printf("gcd(det(A), 26) is:");
   gcd(det_A, 26);
   printf("inverse of A exists");
} else {
   "Exiting b/c gcd failed";
   printf("gcd(det(A), 26): %s",gcd(det_A, 26));
   quit;
}

matrix inv_A = inverse(A);

printf("inverse of A:");
inv_A;

"check of inv_A*A = I:";

inv_A*A;

// Ax = B
// So, x = inv_A * B;

"Solutions for x = :";
inv_A*B;
quit;