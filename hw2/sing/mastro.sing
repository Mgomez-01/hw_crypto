// extending F2 with A
ring r = (2, x), (A,B,Z,z0,z1,z2,a0,b0,a1,b1,a2,b2), lp;

// adding in the minpoly 
minpoly = x^3 + x^2 + 1;
int i, j;
for (i = 0; i < 8; i++){
    printf("x^%s = %s", i, x^i);
}

for (i = 0; i < 8; i++){
    for (j = 0; j < 8; j++){
       printf("%s * %s = %s", x^i, x^j, x^i * x^j);
   }		   
}


poly s0,s1,s2,s3,s4,zp0,zp1,zp2;

s0 = a0*b0;
s1 = a1*b0 + a0*b1;
s2 = a2*b0 + a1*b1 + a0*b2;
s3 = a2*b1 + a1*b2;
s4 = a2*b2;

zp0 = s0 + s3 + s4;
zp1 = s1 + s4;
zp2 = s2 + s3 + s4;

poly f1 = A + a0 + a1*x + a2*x^2;
poly f2 = B + b0 + b1*x + b2*x^2;
poly f3 = Z + z0 + z1*x + z2*x^2;

poly Z_test = A*B + Z;
poly Z_mine = Z + zp0 + zp1*x + zp2*x^2;

poly miter = Z_mine + Z_test;

ideal I = s0,s1,s2,s3,s4, f1, f2, f3;
"Expected";
groebner(Z_test, I);
"Mine";
groebner(Z_mine, std(I+zp0+zp1+zp2));
"Miter";
groebner(miter, std(I));

"Completed";

quit;


